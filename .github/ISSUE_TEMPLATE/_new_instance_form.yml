name: CDP Instance Configuration
description: Configure and deploy a new CDP instance.
title: "[Instance]: "
labels:
  - "new instance"
assignees:
  - evamaxfield
body:
  - type: markdown
    attributes:
      value: |
        Please fill out the following information to start the process for deploying a new CDP instance.

        Please refer to our documentation on the [cost of maintaining a CDP instance](https://github.com/CouncilDataProject/cookiecutter-cdp-deployment#cost) and verify that you are able to pay the estimated monthly cost of a new CDP instance.
  - type: markdown
    attributes:
      value: '## Instance Configuration Basics'
  - type: input
    id: municipality_name
    attributes:
      label: Municipality Name
      description: The name of the municipality (town, city, county, etc.) that this CDP Instance will store data for.
      placeholder: ex. "Seattle", "King County"
    validations:
      required: true
  - type: input
    id: timezone
    attributes:
      label: Municipality Timezone
      description: The timezone of your municipality. See [the TZ database name column](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) to find the appropriate timezone string.
      placeholder: ex. "America/Los_Angeles"
    validations:
      required: true
  - type: input
    id: governing_body_type
    attributes:
      label: Governing Body Type
      description: What type of governing body this instance is for. Must be one of, 'city council', 'county council', 'other', or 'school board'.
      placeholder: ex. "city council", "county council"
    validations:
      required: true
  - type: input
    id: maintainer_github_name
    attributes:
      label: Maintainer GitHub Name
      description: Who will act as the primary maintainer of the new CDP Instance.
      placeholder: ex. "evamaxfield"
    validations:
      required: true
  - type: markdown
    attributes:
      value: |
        ## Recommended Legistar Options

        These fields are entirely optional however if your municipality utilizes Legistar, they are highly recommended as our tools may be entirely able to automate the creation and management of your scraper.

        To find out if your municipality uses Legistar for its legislation management software follow the steps outlined in our [Legistar Documentation](https://councildataproject.org/cdp-scrapers/finding_legistar_id.html). If Legistar is used, this instance configuration process could potentially be automated for you and you can fill in your Legistar Id below. If not, you will need to write a [custom event scraper](https://councildataproject.org/cdp-scrapers/index.html#creating-a-custom-scraper) to complete the process.
        
        If you plan on using Legistar, all fields in this section are required. I.e. the municipality's Legistar Client Id is required and can be found by following our recommendations in [documentation](https://councildataproject.org/cdp-scrapers/legistar_scraper.html).

        **Note:** If you already have a scraper written and published in `cdp-scrapers`,
        you can provide the municipality slug instead of these Legistar options.
  - type: input
    id: legistar_client_id
    attributes:
      label: Legistar Client Id
      description: If planning on using Legistar, the municipalities Legistar Client Id as described in above documentation.
      placeholder: ex. "seattle"
  - type: markdown
    attributes:
      value: '## Optional Infrastructure Options'
  - type: input
    id: municipality_slug
    attributes:
      label: Municipality Slug
      description: The name of the municipality cleaned for use in infrastructure and certain parts of repository naming. Default - municipality name lowercased and spaces replaced with '-'. This is useful if you want to add more specificity to the generated repository name, i.e. "seattle-wa" instead of simply "seattle".
      placeholder: ex. "seattle", "king-county"
  - type: input
    id: firestore_region
    attributes:
      label: Firestore Region
      description: The desired region to host the firestore instance. ([Firestore docs](https://firebase.google.com/docs/firestore/locations)) Default - 'us-central'.
      placeholder: ex. "us-west1", "us-central"
  - type: input
    id: event_gather_timedelta_lookback_days
    attributes:
      label: Event Gather Timedelta Lookback Days
      description: The number of days to look back from the current date every time the event scraper runs. Default - 2.
      placeholder: ex. 2, 4, 10
  - type: input
    id: event_gather_cron
    attributes:
      label: Event Gather CRON
      description: The event gather CRON configuration. ([GitHub Actions CRON Details](https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule)) Default - '26 0,6,12,18 * * *'
      placeholder: ex. "26 0,6,12,18 * * *", "17 3,9,15,21 * * *"
  - type: checkboxes
    id: terms
    attributes:
      label: Code of Conduct
      description: By submitting this issue, you agree to follow our [Code of Conduct](https://github.com/CouncilDataProject/councildataproject.github.io/blob/main/CODE_OF_CONDUCT.md)
      options:
        - label: I agree to follow this project's Code of Conduct
          required: true
